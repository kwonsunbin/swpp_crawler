import sys
import math
import fractions
import itertools
from collections import deque
import copy
import bisect

MOD = 10 ** 9 + 7
INF = 10 ** 18 + 7
input = lambda: sys.stdin.readline().strip()

N, W = map(int, input().split())
v, w = [0 for _ in range(N + 1)], [0 for _ in range(N + 1)]
for i in range(1, N + 1):
    v[i], w[i] = map(int, input().split())

dp = [[0 for _ in range(W + 10)] for _ in range(N + 10)]

for i in range(w[1], W + 1):
    dp[1][i] = v[1]
for i in range(2, N + 1):
    for l in range(1, W + 1):
        if l - w[i] >= 0:
            dp[i][l] = max(dp[i - 1][l], dp[i - 1][l - w[i]] + v[i])
        else:
            dp[i][l] = dp[i - 1][l]
print(dp[N][W])

